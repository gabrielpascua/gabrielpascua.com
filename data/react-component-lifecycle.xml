<?xml version="1.0" encoding="UTF-8"?>
<mxGraphModel dx="1908" dy="1036" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="826" pageHeight="1169" background="#ffffff" math="0" shadow="0"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="530" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry y="1034" width="650" height="278" as="geometry"/></mxCell><mxCell id="531" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="486" width="580" height="100" as="geometry"/></mxCell><mxCell id="532" value="Unmounting" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];fontSize=18;fontStyle=1" vertex="1" parent="531"><mxGeometry width="110" height="20" as="geometry"/></mxCell><mxCell id="533" value="componentWillUnmount" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="531"><mxGeometry y="50" width="180" height="50" as="geometry"/></mxCell><mxCell id="534" value="Invoked before a component is unmounted from the DOM via&amp;nbsp;&lt;br&gt;unmountComponentAtNode(). &amp;nbsp;Perform any necessary cleanup here&lt;br&gt;" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="531"><mxGeometry x="200" y="60" width="380" height="30" as="geometry"/></mxCell><mxCell id="535" value="" style="group" vertex="1" connectable="0" parent="531"><mxGeometry x="2" y="52" width="20" height="42" as="geometry"/></mxCell><mxCell id="536" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="531"><mxGeometry x="2" y="52" width="20" height="18" as="geometry"/></mxCell><mxCell id="537" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="531"><mxGeometry x="158" y="52" width="20" height="18" as="geometry"/></mxCell><mxCell id="538" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="637" width="610" height="337" as="geometry"/></mxCell><mxCell id="539" value="Props Changes" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];fontSize=18;fontStyle=1" vertex="1" parent="538"><mxGeometry width="140" height="20" as="geometry"/></mxCell><mxCell id="540" value="" style="group" vertex="1" connectable="0" parent="538"><mxGeometry y="50" width="610" height="50" as="geometry"/></mxCell><mxCell id="541" value="componentWillReceiveProps()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="540"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="542" value="Use this as an opportunity to react to a prop transition or compare old and &lt;br&gt;new props before render.&amp;nbsp;The old props can be accessed via `this.props`. &lt;br&gt;You&amp;nbsp;MUST NOT assume that your props have changed.&lt;br&gt;" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="540"><mxGeometry x="200" width="410" height="40" as="geometry"/></mxCell><mxCell id="543" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="540"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="544" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="540"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="545" value="" style="group" vertex="1" connectable="0" parent="538"><mxGeometry y="109" width="600" height="50" as="geometry"/></mxCell><mxCell id="546" value="shouldComponentUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="545"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="547" value="`return true` by default, or `return false` if you don't require a component&lt;br&gt;update. if `false` componentWillUpdate() and componentDidUdpate() will&lt;br&gt;not be called." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="545"><mxGeometry x="200" width="400" height="40" as="geometry"/></mxCell><mxCell id="548" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="545"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="549" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="545"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="550" value="" style="group" vertex="1" connectable="0" parent="538"><mxGeometry y="168" width="600" height="50" as="geometry"/></mxCell><mxCell id="551" value="componentWillUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="550"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="552" value="State changes are not allowed because it will trigger another component&lt;br&gt;update causing an infinite loop. Handle configuration changes here or&lt;br&gt;dispatch call a function based on state change." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="550"><mxGeometry x="200" width="400" height="40" as="geometry"/></mxCell><mxCell id="553" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="550"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="554" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="550"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="555" value="" style="group" vertex="1" connectable="0" parent="538"><mxGeometry y="228" width="400" height="50" as="geometry"/></mxCell><mxCell id="556" value="render()" style="whiteSpace=wrap;html=1;" vertex="1" parent="555"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="557" value="Re-rendering and children updates" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="555"><mxGeometry x="200" y="15" width="200" height="20" as="geometry"/></mxCell><mxCell id="558" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="555"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="559" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="555"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="560" value="" style="group" vertex="1" connectable="0" parent="538"><mxGeometry y="287" width="590" height="50" as="geometry"/></mxCell><mxCell id="561" value="componentDidUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="560"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="562" value="Operate on the DOM when the component has been updated. &amp;nbsp;Manage&lt;br&gt;3rd party or query the Native UI to get the DOM properties or styling &lt;br&gt;information." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="560"><mxGeometry x="200" width="390" height="40" as="geometry"/></mxCell><mxCell id="563" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="560"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="564" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="560"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="565" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;entryX=0;entryY=0.25;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;" edge="1" parent="538" source="541" target="546"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint x="-30" y="75"/><mxPoint x="-30" y="122"/></Array></mxGeometry></mxCell><mxCell id="566" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;entryX=0;entryY=0.5;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;" edge="1" parent="538" source="546" target="551"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint x="-30" y="134"/><mxPoint x="-30" y="193"/><mxPoint y="193"/></Array></mxGeometry></mxCell><mxCell id="567" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=0.002;entryY=0.427;entryPerimeter=0;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;" edge="1" parent="538" source="551" target="556"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint x="-30" y="206"/><mxPoint x="-30" y="249"/></Array></mxGeometry></mxCell><mxCell id="568" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.75;entryX=-0.001;entryY=0.418;entryPerimeter=0;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;" edge="1" parent="538" source="556" target="561"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint x="-30" y="266"/><mxPoint x="-30" y="308"/></Array></mxGeometry></mxCell><mxCell id="569" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="30" width="610" height="428" as="geometry"/></mxCell><mxCell id="570" value="" style="group" vertex="1" connectable="0" parent="569"><mxGeometry width="610" height="428" as="geometry"/></mxCell><mxCell id="571" value="" style="group" vertex="1" connectable="0" parent="570"><mxGeometry y="346" width="610" height="82" as="geometry"/></mxCell><mxCell id="572" value="Mounting" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];fontSize=18;fontStyle=1" vertex="1" parent="1"><mxGeometry x="40" y="30" width="90" height="20" as="geometry"/></mxCell><mxCell id="573" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="80" width="600" height="50" as="geometry"/></mxCell><mxCell id="574" value="constructor" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="573"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="575" value="Must call `super()` first, or `super(props)` if access to props is required.&lt;br&gt;`this` is undefined if called prior to super(). State initialization is allowed.&lt;br&gt;Binding event handlers is recommended so they are only bound once&lt;br&gt;" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="573"><mxGeometry x="200" width="400" height="40" as="geometry"/></mxCell><mxCell id="576" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="573"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="577" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#E6E6E6;fontSize=8;fontColor=#B3B3B3;" vertex="1" parent="573"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="578" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="258" width="560" height="50" as="geometry"/></mxCell><mxCell id="579" value="componentWillMount" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="578"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="580" value="Invoked once on the client and server. &amp;nbsp;You can handle state and&lt;br&gt;configuration. Props and initial state are defined at this point.&lt;br&gt;" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="578"><mxGeometry x="200" y="10" width="360" height="30" as="geometry"/></mxCell><mxCell id="581" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="578"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="582" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="578"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="583" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="317" width="460" height="50" as="geometry"/></mxCell><mxCell id="584" value="render" style="whiteSpace=wrap;html=1;" vertex="1" parent="583"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="585" value="Required. &amp;nbsp;It must not modify component state." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="583"><mxGeometry x="200" y="15" width="260" height="20" as="geometry"/></mxCell><mxCell id="586" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="583"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="587" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="583"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="588" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="139" width="600" height="50" as="geometry"/></mxCell><mxCell id="589" value="getDefaultProps()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="588"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="590" value="Invoked before any instances are created and thus cannot rely on&lt;br&gt;`this.props`. Complex objects returned here are shared and not copied.&amp;nbsp;&lt;br&gt;Values assigned in the mapping will be available on `this.props`" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="588"><mxGeometry x="200" width="400" height="40" as="geometry"/></mxCell><mxCell id="591" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="588"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="592" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#E6E6E6;fontSize=8;fontColor=#B3B3B3;" vertex="1" parent="588"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="593" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="40" y="198" width="600" height="50" as="geometry"/></mxCell><mxCell id="594" value="getInitialState()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="593"><mxGeometry width="180" height="50" as="geometry"/></mxCell><mxCell id="595" value="Invoked once and&amp;nbsp;the return value will be used as the initial value of&amp;nbsp;&lt;br&gt;`this.state`. &amp;nbsp;Use to seed data for the component's internally-controlled &lt;br&gt;state but not to generate it." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="593"><mxGeometry x="200" width="390" height="40" as="geometry"/></mxCell><mxCell id="596" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="593"><mxGeometry x="158" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="597" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#E6E6E6;fontSize=8;fontColor=#B3B3B3;" vertex="1" parent="593"><mxGeometry x="2" y="2" width="20" height="18" as="geometry"/></mxCell><mxCell id="598" value="componentDidMount" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="1"><mxGeometry x="40" y="376" width="180" height="50" as="geometry"/></mxCell><mxCell id="599" value="Perform work here if browser interaction is required. &amp;nbsp;Access to the native&lt;br&gt;UI and children via `refs` is available. Children loads from bottom up.&amp;nbsp;&lt;br&gt;Another useful task is setting up 3rd party UIs" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="1"><mxGeometry x="240" y="376" width="410" height="40" as="geometry"/></mxCell><mxCell id="600" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="1"><mxGeometry x="42" y="378" width="20" height="18" as="geometry"/></mxCell><mxCell id="601" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="1"><mxGeometry x="198" y="378" width="20" height="18" as="geometry"/></mxCell><mxCell id="602" value="" style="endArrow=classic;html=1;strokeColor=#808080;exitX=0;exitY=0.75;entryX=0;entryY=0.5;edgeStyle=orthogonalEdgeStyle;rounded=0;" edge="1" source="574" target="589" parent="1"><mxGeometry x="9" y="117.5" width="50" height="50" as="geometry"><mxPoint x="-170" y="110" as="sourcePoint"/><mxPoint x="-120" y="60" as="targetPoint"/><Array as="points"><mxPoint x="10" y="118"/><mxPoint x="10" y="164"/></Array></mxGeometry></mxCell><mxCell id="603" value="" style="endArrow=classic;html=1;strokeColor=#808080;exitX=0;exitY=0.75;entryX=0;entryY=0.5;edgeStyle=orthogonalEdgeStyle;rounded=0;" edge="1" source="589" target="594" parent="1"><mxGeometry x="9" y="177.5" width="50" height="50" as="geometry"><mxPoint x="-90" y="105" as="sourcePoint"/><mxPoint x="-90" y="151" as="targetPoint"/><Array as="points"><mxPoint x="10" y="177"/><mxPoint x="10" y="223"/></Array></mxGeometry></mxCell><mxCell id="604" value="" style="endArrow=classic;html=1;strokeColor=#808080;exitX=0;exitY=0.75;edgeStyle=orthogonalEdgeStyle;rounded=0;entryX=0;entryY=0.5;" edge="1" source="579" target="584" parent="1"><mxGeometry x="9" y="295" width="50" height="50" as="geometry"><mxPoint x="-70" y="208" as="sourcePoint"/><mxPoint x="-80" y="254" as="targetPoint"/><Array as="points"><mxPoint x="40" y="298"/><mxPoint x="10" y="298"/><mxPoint x="10" y="342"/></Array></mxGeometry></mxCell><mxCell id="605" value="" style="endArrow=classic;html=1;strokeColor=#808080;exitX=0;exitY=0.75;edgeStyle=orthogonalEdgeStyle;rounded=0;entryX=0;entryY=0.5;" edge="1" source="594" target="579" parent="1"><mxGeometry x="9" y="235" width="50" height="50" as="geometry"><mxPoint x="-70" y="145" as="sourcePoint"/><mxPoint x="-120" y="200" as="targetPoint"/><Array as="points"><mxPoint x="40" y="235"/><mxPoint x="10" y="235"/><mxPoint x="10" y="283"/></Array></mxGeometry></mxCell><mxCell id="606" value="" style="endArrow=classic;html=1;strokeColor=#808080;exitX=0;exitY=0.75;entryX=0;entryY=0.5;edgeStyle=orthogonalEdgeStyle;rounded=0;" edge="1" source="584" target="598" parent="1"><mxGeometry x="9" y="355" width="50" height="50" as="geometry"><mxPoint x="-80" y="265" as="sourcePoint"/><mxPoint x="-80" y="311" as="targetPoint"/><Array as="points"><mxPoint x="10" y="355"/><mxPoint x="10" y="401"/></Array></mxGeometry></mxCell><mxCell id="607" value="" style="group" vertex="1" connectable="0" parent="1"><mxGeometry x="10" y="1034" width="630" height="278" as="geometry"/></mxCell><mxCell id="608" value="State Changes" style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];fontSize=18;fontStyle=1" vertex="1" parent="607"><mxGeometry x="30" width="130" height="20" as="geometry"/></mxCell><mxCell id="609" value="State changes are triggered by `setState()` and fires exactly the same &lt;br&gt;lifecycle as Props Changes except&amp;nbsp;for componentWillReceiveProps(). &amp;nbsp;&lt;br&gt;An incoming prop transition may&amp;nbsp;require a state change but the opposite &lt;br&gt;is not true." style="text;html=1;resizable=0;autosize=1;align=left;verticalAlign=top;spacingTop=-4;points=[];" vertex="1" parent="607"><mxGeometry x="230" y="134" width="400" height="60" as="geometry"/></mxCell><mxCell id="610" value="componentDidUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="607"><mxGeometry x="30" y="228" width="180" height="50" as="geometry"/></mxCell><mxCell id="611" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="52" width="20" height="18" as="geometry"/></mxCell><mxCell id="612" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="52" width="20" height="18" as="geometry"/></mxCell><mxCell id="613" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="111" width="20" height="18" as="geometry"/></mxCell><mxCell id="614" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="111" width="20" height="18" as="geometry"/></mxCell><mxCell id="615" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="171" width="20" height="18" as="geometry"/></mxCell><mxCell id="616" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="171" width="20" height="18" as="geometry"/></mxCell><mxCell id="617" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="230" width="20" height="18" as="geometry"/></mxCell><mxCell id="618" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="230" width="20" height="18" as="geometry"/></mxCell><mxCell id="619" value="" style="group" vertex="1" connectable="0" parent="607"><mxGeometry y="50" width="210" height="169" as="geometry"/></mxCell><mxCell id="620" value="render()" style="whiteSpace=wrap;html=1;" vertex="1" parent="619"><mxGeometry x="30" y="119" width="180" height="50" as="geometry"/></mxCell><mxCell id="621" value="" style="group" vertex="1" connectable="0" parent="619"><mxGeometry width="210" height="109" as="geometry"/></mxCell><mxCell id="622" value="shouldComponentUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="621"><mxGeometry x="30" width="180" height="50" as="geometry"/></mxCell><mxCell id="623" value="componentWillUpdate()" style="whiteSpace=wrap;html=1;dashed=1;" vertex="1" parent="621"><mxGeometry x="30" y="59" width="180" height="50" as="geometry"/></mxCell><mxCell id="624" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;exitX=0;exitY=0.5;entryX=0;entryY=0.25;jettySize=auto;orthogonalLoop=1;fontSize=8;fontColor=#B3B3B3;strokeColor=#808080;" edge="1" parent="621" source="622" target="623"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint y="25"/><mxPoint y="72"/></Array></mxGeometry></mxCell><mxCell id="625" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;fontSize=8;fontColor=#B3B3B3;" edge="1" parent="619" source="623"><mxGeometry relative="1" as="geometry"><mxPoint x="30" y="136" as="targetPoint"/><Array as="points"><mxPoint y="84"/><mxPoint y="136"/></Array></mxGeometry></mxCell><mxCell id="626" style="edgeStyle=orthogonalEdgeStyle;rounded=0;html=1;entryX=0;entryY=0.5;jettySize=auto;orthogonalLoop=1;strokeColor=#808080;fontSize=8;fontColor=#B3B3B3;" edge="1" parent="607" source="620" target="610"><mxGeometry relative="1" as="geometry"><Array as="points"><mxPoint y="194"/><mxPoint y="253"/></Array></mxGeometry></mxCell><mxCell id="627" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="171" width="20" height="18" as="geometry"/></mxCell><mxCell id="628" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="171" width="20" height="18" as="geometry"/></mxCell><mxCell id="629" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="111" width="20" height="18" as="geometry"/></mxCell><mxCell id="630" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="111" width="20" height="18" as="geometry"/></mxCell><mxCell id="631" value="St" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#A9C4EB;fontSize=8;" vertex="1" parent="607"><mxGeometry x="188" y="52" width="20" height="18" as="geometry"/></mxCell><mxCell id="632" value="ES6" style="whiteSpace=wrap;html=1;strokeColor=none;fillColor=#FFD966;fontSize=8;" vertex="1" parent="607"><mxGeometry x="32" y="52" width="20" height="18" as="geometry"/></mxCell></root></mxGraphModel>